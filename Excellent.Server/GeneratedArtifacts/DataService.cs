//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Inserting(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Inserted(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Updating(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Updated(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Deleting(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Deleted(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Validate(global::LightSwitchApplication.Company entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Company, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Participations_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Participations_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Participations_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Participations_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Participations_Inserting(global::LightSwitchApplication.Participation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Participations_Inserted(global::LightSwitchApplication.Participation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Participations_Updating(global::LightSwitchApplication.Participation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Participations_Updated(global::LightSwitchApplication.Participation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Participations_Deleting(global::LightSwitchApplication.Participation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Participations_Deleted(global::LightSwitchApplication.Participation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Participations_Validate(global::LightSwitchApplication.Participation entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Participations_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Participation, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Exceptions_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Exceptions_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Exceptions_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Exceptions_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Exceptions_Inserting(global::LightSwitchApplication.Exception entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Exceptions_Inserted(global::LightSwitchApplication.Exception entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Exceptions_Updating(global::LightSwitchApplication.Exception entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Exceptions_Updated(global::LightSwitchApplication.Exception entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Exceptions_Deleting(global::LightSwitchApplication.Exception entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Exceptions_Deleted(global::LightSwitchApplication.Exception entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Exceptions_Validate(global::LightSwitchApplication.Exception entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Exceptions_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Exception, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Inserting(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Inserted(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Updating(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Updated(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Deleting(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Deleted(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Validate(global::LightSwitchApplication.User entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.User, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Inserting(global::LightSwitchApplication.Note entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Inserted(global::LightSwitchApplication.Note entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Updating(global::LightSwitchApplication.Note entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Updated(global::LightSwitchApplication.Note entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Deleting(global::LightSwitchApplication.Note entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Deleted(global::LightSwitchApplication.Note entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Validate(global::LightSwitchApplication.Note entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Note, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attachements_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attachements_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attachements_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attachements_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attachements_Inserting(global::LightSwitchApplication.Attachement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attachements_Inserted(global::LightSwitchApplication.Attachement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attachements_Updating(global::LightSwitchApplication.Attachement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attachements_Updated(global::LightSwitchApplication.Attachement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attachements_Deleting(global::LightSwitchApplication.Attachement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attachements_Deleted(global::LightSwitchApplication.Attachement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attachements_Validate(global::LightSwitchApplication.Attachement entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attachements_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Attachement, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attendees_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attendees_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attendees_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attendees_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attendees_Inserting(global::LightSwitchApplication.Attendee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attendees_Inserted(global::LightSwitchApplication.Attendee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attendees_Updating(global::LightSwitchApplication.Attendee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attendees_Updated(global::LightSwitchApplication.Attendee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attendees_Deleting(global::LightSwitchApplication.Attendee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attendees_Deleted(global::LightSwitchApplication.Attendee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attendees_Validate(global::LightSwitchApplication.Attendee entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Attendees_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Attendee, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Conferences_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Conferences_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Conferences_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Conferences_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Conferences_Inserting(global::LightSwitchApplication.Conference entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Conferences_Inserted(global::LightSwitchApplication.Conference entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Conferences_Updating(global::LightSwitchApplication.Conference entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Conferences_Updated(global::LightSwitchApplication.Conference entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Conferences_Deleting(global::LightSwitchApplication.Conference entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Conferences_Deleted(global::LightSwitchApplication.Conference entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Conferences_Validate(global::LightSwitchApplication.Conference entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Conferences_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Conference, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Deadlines_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Deadlines_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Deadlines_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Deadlines_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Deadlines_Inserting(global::LightSwitchApplication.Deadline entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Deadlines_Inserted(global::LightSwitchApplication.Deadline entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Deadlines_Updating(global::LightSwitchApplication.Deadline entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Deadlines_Updated(global::LightSwitchApplication.Deadline entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Deadlines_Deleting(global::LightSwitchApplication.Deadline entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Deadlines_Deleted(global::LightSwitchApplication.Deadline entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Deadlines_Validate(global::LightSwitchApplication.Deadline entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Deadlines_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Deadline, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApplicationData_InitializingConnection(global::Microsoft.LightSwitch.DatabaseConnectionState state);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1810:InitializeReferenceTypeStaticFieldsInline")]
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Company>
                __CompaniesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Company>(
                    "Companies",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_Filter);
            private static bool __Companies_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Companies_CanInsert(ref result);
                return result;
            }
            private static bool __Companies_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Companies_CanUpdate(ref result);
                return result;
            }
            private static bool __Companies_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Companies_CanDelete(ref result);
                return result;
            }
            private static bool __Companies_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Companies_CanRead(ref result);
                return result;
            }
            private static void __Companies_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Inserting(e);
            }
            private static void __Companies_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Inserted(e);
            }
            private static void __Companies_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Updating(e);
            }
            private static void __Companies_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Updated(e);
            }
            private static void __Companies_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Deleting(e);
            }
            private static void __Companies_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Deleted(e);
            }
            private static void __Companies_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Companies_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Company, bool>> __Companies_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Company, bool>> filter = null;
                d.Companies_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Participation>
                __ParticipationsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Participation>(
                    "Participations",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Participations_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Participations_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Participations_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Participations_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Participations_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Participations_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Participations_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Participations_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Participations_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Participations_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Participations_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Participations_Filter);
            private static bool __Participations_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Participations_CanInsert(ref result);
                return result;
            }
            private static bool __Participations_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Participations_CanUpdate(ref result);
                return result;
            }
            private static bool __Participations_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Participations_CanDelete(ref result);
                return result;
            }
            private static bool __Participations_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Participations_CanRead(ref result);
                return result;
            }
            private static void __Participations_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Participation e)
            {
                d.Participations_Inserting(e);
            }
            private static void __Participations_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Participation e)
            {
                d.Participations_Inserted(e);
            }
            private static void __Participations_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Participation e)
            {
                d.Participations_Updating(e);
            }
            private static void __Participations_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Participation e)
            {
                d.Participations_Updated(e);
            }
            private static void __Participations_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Participation e)
            {
                d.Participations_Deleting(e);
            }
            private static void __Participations_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Participation e)
            {
                d.Participations_Deleted(e);
            }
            private static void __Participations_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Participation e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Participations_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Participation, bool>> __Participations_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Participation, bool>> filter = null;
                d.Participations_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Exception>
                __ExceptionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Exception>(
                    "Exceptions",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Exceptions_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Exceptions_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Exceptions_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Exceptions_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Exceptions_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Exceptions_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Exceptions_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Exceptions_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Exceptions_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Exceptions_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Exceptions_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Exceptions_Filter);
            private static bool __Exceptions_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Exceptions_CanInsert(ref result);
                return result;
            }
            private static bool __Exceptions_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Exceptions_CanUpdate(ref result);
                return result;
            }
            private static bool __Exceptions_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Exceptions_CanDelete(ref result);
                return result;
            }
            private static bool __Exceptions_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Exceptions_CanRead(ref result);
                return result;
            }
            private static void __Exceptions_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Exception e)
            {
                d.Exceptions_Inserting(e);
            }
            private static void __Exceptions_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Exception e)
            {
                d.Exceptions_Inserted(e);
            }
            private static void __Exceptions_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Exception e)
            {
                d.Exceptions_Updating(e);
            }
            private static void __Exceptions_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Exception e)
            {
                d.Exceptions_Updated(e);
            }
            private static void __Exceptions_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Exception e)
            {
                d.Exceptions_Deleting(e);
            }
            private static void __Exceptions_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Exception e)
            {
                d.Exceptions_Deleted(e);
            }
            private static void __Exceptions_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Exception e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Exceptions_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Exception, bool>> __Exceptions_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Exception, bool>> filter = null;
                d.Exceptions_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.User>
                __UsersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.User>(
                    "Users",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Filter);
            private static bool __Users_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Users_CanInsert(ref result);
                return result;
            }
            private static bool __Users_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Users_CanUpdate(ref result);
                return result;
            }
            private static bool __Users_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Users_CanDelete(ref result);
                return result;
            }
            private static bool __Users_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Users_CanRead(ref result);
                return result;
            }
            private static void __Users_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Inserting(e);
            }
            private static void __Users_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Inserted(e);
            }
            private static void __Users_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Updating(e);
            }
            private static void __Users_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Updated(e);
            }
            private static void __Users_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Deleting(e);
            }
            private static void __Users_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Deleted(e);
            }
            private static void __Users_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Users_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.User, bool>> __Users_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.User, bool>> filter = null;
                d.Users_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Note>
                __NotesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Note>(
                    "Notes",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Notes_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Notes_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Notes_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Notes_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Notes_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Notes_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Notes_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Notes_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Notes_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Notes_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Notes_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Notes_Filter);
            private static bool __Notes_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Notes_CanInsert(ref result);
                return result;
            }
            private static bool __Notes_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Notes_CanUpdate(ref result);
                return result;
            }
            private static bool __Notes_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Notes_CanDelete(ref result);
                return result;
            }
            private static bool __Notes_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Notes_CanRead(ref result);
                return result;
            }
            private static void __Notes_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Note e)
            {
                d.Notes_Inserting(e);
            }
            private static void __Notes_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Note e)
            {
                d.Notes_Inserted(e);
            }
            private static void __Notes_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Note e)
            {
                d.Notes_Updating(e);
            }
            private static void __Notes_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Note e)
            {
                d.Notes_Updated(e);
            }
            private static void __Notes_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Note e)
            {
                d.Notes_Deleting(e);
            }
            private static void __Notes_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Note e)
            {
                d.Notes_Deleted(e);
            }
            private static void __Notes_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Note e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Notes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Note, bool>> __Notes_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Note, bool>> filter = null;
                d.Notes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Attachement>
                __AttachementsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Attachement>(
                    "Attachements",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attachements_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attachements_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attachements_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attachements_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attachements_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attachements_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attachements_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attachements_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attachements_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attachements_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attachements_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attachements_Filter);
            private static bool __Attachements_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Attachements_CanInsert(ref result);
                return result;
            }
            private static bool __Attachements_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Attachements_CanUpdate(ref result);
                return result;
            }
            private static bool __Attachements_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Attachements_CanDelete(ref result);
                return result;
            }
            private static bool __Attachements_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Attachements_CanRead(ref result);
                return result;
            }
            private static void __Attachements_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Attachement e)
            {
                d.Attachements_Inserting(e);
            }
            private static void __Attachements_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Attachement e)
            {
                d.Attachements_Inserted(e);
            }
            private static void __Attachements_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Attachement e)
            {
                d.Attachements_Updating(e);
            }
            private static void __Attachements_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Attachement e)
            {
                d.Attachements_Updated(e);
            }
            private static void __Attachements_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Attachement e)
            {
                d.Attachements_Deleting(e);
            }
            private static void __Attachements_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Attachement e)
            {
                d.Attachements_Deleted(e);
            }
            private static void __Attachements_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Attachement e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Attachements_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Attachement, bool>> __Attachements_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Attachement, bool>> filter = null;
                d.Attachements_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Attendee>
                __AttendeesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Attendee>(
                    "Attendees",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attendees_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attendees_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attendees_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attendees_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attendees_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attendees_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attendees_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attendees_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attendees_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attendees_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attendees_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Attendees_Filter);
            private static bool __Attendees_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Attendees_CanInsert(ref result);
                return result;
            }
            private static bool __Attendees_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Attendees_CanUpdate(ref result);
                return result;
            }
            private static bool __Attendees_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Attendees_CanDelete(ref result);
                return result;
            }
            private static bool __Attendees_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Attendees_CanRead(ref result);
                return result;
            }
            private static void __Attendees_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Attendee e)
            {
                d.Attendees_Inserting(e);
            }
            private static void __Attendees_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Attendee e)
            {
                d.Attendees_Inserted(e);
            }
            private static void __Attendees_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Attendee e)
            {
                d.Attendees_Updating(e);
            }
            private static void __Attendees_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Attendee e)
            {
                d.Attendees_Updated(e);
            }
            private static void __Attendees_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Attendee e)
            {
                d.Attendees_Deleting(e);
            }
            private static void __Attendees_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Attendee e)
            {
                d.Attendees_Deleted(e);
            }
            private static void __Attendees_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Attendee e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Attendees_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Attendee, bool>> __Attendees_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Attendee, bool>> filter = null;
                d.Attendees_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Conference>
                __ConferencesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Conference>(
                    "Conferences",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Conferences_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Conferences_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Conferences_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Conferences_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Conferences_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Conferences_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Conferences_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Conferences_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Conferences_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Conferences_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Conferences_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Conferences_Filter);
            private static bool __Conferences_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Conferences_CanInsert(ref result);
                return result;
            }
            private static bool __Conferences_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Conferences_CanUpdate(ref result);
                return result;
            }
            private static bool __Conferences_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Conferences_CanDelete(ref result);
                return result;
            }
            private static bool __Conferences_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Conferences_CanRead(ref result);
                return result;
            }
            private static void __Conferences_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Conference e)
            {
                d.Conferences_Inserting(e);
            }
            private static void __Conferences_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Conference e)
            {
                d.Conferences_Inserted(e);
            }
            private static void __Conferences_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Conference e)
            {
                d.Conferences_Updating(e);
            }
            private static void __Conferences_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Conference e)
            {
                d.Conferences_Updated(e);
            }
            private static void __Conferences_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Conference e)
            {
                d.Conferences_Deleting(e);
            }
            private static void __Conferences_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Conference e)
            {
                d.Conferences_Deleted(e);
            }
            private static void __Conferences_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Conference e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Conferences_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Conference, bool>> __Conferences_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Conference, bool>> filter = null;
                d.Conferences_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Deadline>
                __DeadlinesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Deadline>(
                    "Deadlines",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Deadlines_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Deadlines_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Deadlines_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Deadlines_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Deadlines_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Deadlines_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Deadlines_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Deadlines_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Deadlines_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Deadlines_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Deadlines_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Deadlines_Filter);
            private static bool __Deadlines_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Deadlines_CanInsert(ref result);
                return result;
            }
            private static bool __Deadlines_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Deadlines_CanUpdate(ref result);
                return result;
            }
            private static bool __Deadlines_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Deadlines_CanDelete(ref result);
                return result;
            }
            private static bool __Deadlines_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Deadlines_CanRead(ref result);
                return result;
            }
            private static void __Deadlines_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Deadline e)
            {
                d.Deadlines_Inserting(e);
            }
            private static void __Deadlines_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Deadline e)
            {
                d.Deadlines_Inserted(e);
            }
            private static void __Deadlines_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Deadline e)
            {
                d.Deadlines_Updating(e);
            }
            private static void __Deadlines_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Deadline e)
            {
                d.Deadlines_Updated(e);
            }
            private static void __Deadlines_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Deadline e)
            {
                d.Deadlines_Deleting(e);
            }
            private static void __Deadlines_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Deadline e)
            {
                d.Deadlines_Deleted(e);
            }
            private static void __Deadlines_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Deadline e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Deadlines_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Deadline, bool>> __Deadlines_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Deadline, bool>> filter = null;
                d.Deadlines_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.DatabaseAuthEntry<global::LightSwitchApplication.ApplicationDataService>
                ___DatabaseAuthEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.DatabaseAuthEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ApplicationData_InitializingConnection);
            private static void __ApplicationData_InitializingConnection(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.DatabaseConnectionState state)
            {
                d.ApplicationData_InitializingConnection(state);
            }
        }
    
        #endregion
    }
    
    #endregion
}
